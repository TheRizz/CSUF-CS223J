import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JPanel;

public class Screen extends JPanel implements KeyListener{
	
	double SleepTime = 1000/30; // 1000/Frames Per Second
	double LastRefresh = 0;
	static double [] ViewFrom = new double [] {10, 10, 10};
	static double [] ViewTo = new double[] {5, 0, 0}; 
	static int NumberOfPolygons = 0;

	static PolygonObject[] DrawablePolygons = new PolygonObject[100];
	
	DPolygon DPoly1 = new DPolygon(new double[]{2, 4, 2}, new double[]{2, 4, 6}, new double[] {5, 5, 5 }, Color.black) ;
	
//	public void paintComponent(Graphics g) {
//		g.fillOval(10, 10, 500, 500);
//	}

	public Screen() {
		addKeyListener(this);
		setFocusable(true);
		//Poly1 = new PolygonObject(new int[]{10, 200, 10}, new int[]{10, 200, 400}, Color.black);
	}
	
	public void paintComponent(Graphics g) {
		//Poly1.drawPolygon(g);
		g.clearRect(0, 0, 2000, 1200);
		g.drawString(System.currentTimeMillis() + "", 20, 20);
		
		DPoly1.updatePolygon();
		
		for(int i =0; i < NumberOfPolygons; i++) {
			DrawablePolygons[i].drawPolygon(g);
		}
		SleepAndRefresh();
	}
	
	void SleepAndRefresh() {
		while(true) {
			if((System.currentTimeMillis() - LastRefresh) > SleepTime) {
				LastRefresh = System.currentTimeMillis();
				repaint();
				break;
			}
			else {
				try {
					Thread.sleep((long)(SleepTime - (System.currentTimeMillis() - LastRefresh)));
				}
				catch(Exception e) {
					
				}
			}
		}
	}

	@Override
	public void keyPressed(KeyEvent e) {
		if(e.getKeyCode() == KeyEvent.VK_LEFT) {
			ViewFrom[0] --;
		}
		if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			ViewFrom[0] ++;
		}
		if(e.getKeyCode() == KeyEvent.VK_UP) {
			ViewFrom[1] --;
		}
		if(e.getKeyCode() == KeyEvent.VK_DOWN) {
			ViewFrom[1] ++;
		}
		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}
	
}
